/** 
 * This file was auto-generated by the command `yarn graphql:codegen` 
 * Please do not edit this file directly. 
 */

export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
};

export type TBook = {
  id: Scalars['ID'];
  title: Scalars['String'];
  author: Scalars['String'];
  publisher: Scalars['String'];
};

export type TCreateBookInput = {
  title: Scalars['String'];
  author: Scalars['String'];
  publisher: Scalars['String'];
};

export type TMutation = {
  createBook: TBook;
  updateBook: TBook;
  deleteBook: Scalars['String'];
};


export type TMutationCreateBookArgs = {
  data: TCreateBookInput;
};


export type TMutationUpdateBookArgs = {
  data: TUpdateBookInput;
  id: Scalars['String'];
};


export type TMutationDeleteBookArgs = {
  id: Scalars['String'];
};

export type TQuery = {
  findBooks: Array<TBook>;
  findBook: TBook;
};


export type TQueryFindBookArgs = {
  id: Scalars['String'];
};

export type TUpdateBookInput = {
  title?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['String']>;
  publisher?: Maybe<Scalars['String']>;
};

export type TCreateBookMutationVariables = Exact<{
  data: TCreateBookInput;
}>;


export type TCreateBookMutation = { createBook: Pick<TBook, 'id'> };

export type TUpdateBookMutationVariables = Exact<{
  data: TUpdateBookInput;
  updateBookId: Scalars['String'];
}>;


export type TUpdateBookMutation = { updateBook: Pick<TBook, 'id'> };

export type TDeleteBookMutationVariables = Exact<{
  deleteBookId: Scalars['String'];
}>;


export type TDeleteBookMutation = Pick<TMutation, 'deleteBook'>;

export type TFindBookQueryVariables = Exact<{
  id: Scalars['String'];
}>;


export type TFindBookQuery = { findBook: Pick<TBook, 'id' | 'title' | 'author' | 'publisher'> };

export type TFindBooksQueryVariables = Exact<{ [key: string]: never; }>;


export type TFindBooksQuery = { findBooks: Array<Pick<TBook, 'id' | 'title' | 'author' | 'publisher'>> };
